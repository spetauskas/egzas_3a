// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using egzas_3;

#nullable disable

namespace egzas_3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241215203537_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("egzas_3.Entities.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("AccountPasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("AccountPasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AccountRole")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = new Guid("00000000-0000-0000-0000-000000000001"),
                            AccountEmail = "spetauskas@gmail.com",
                            AccountName = "admin",
                            AccountPasswordHash = new byte[] { 103, 220, 13, 169, 48, 110, 242, 139, 27, 240, 131, 59, 192, 219, 15, 71, 244, 2, 48, 250, 118, 107, 36, 137, 170, 108, 56, 202, 51, 54, 97, 169 },
                            AccountPasswordSalt = new byte[] { 128, 118, 206, 137, 56, 12, 138, 193, 181, 92, 61, 196, 49, 76, 88, 218, 82, 6, 9, 168, 21, 241, 123, 113, 97, 22, 141, 136, 54, 234, 226, 27, 242, 89, 125, 98, 222, 156, 14, 6, 53, 99, 69, 84, 251, 27, 151, 119, 74, 200, 21, 57, 124, 61, 247, 0, 99, 138, 13, 220, 251, 84, 124, 97 },
                            AccountRole = "admin"
                        });
                });

            modelBuilder.Entity("egzas_3.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserIdentityNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceHouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c48afa0d-230f-447b-bf74-dc229ceef591"),
                            UserCountry = "USA",
                            UserEmail = "john.doe@example.com",
                            UserIdentityNumber = 12345,
                            UserName = "John",
                            UserResidenceCity = "New York",
                            UserResidenceHouseNumber = "123",
                            UserResidenceStreet = "Broadway",
                            UserSurName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("6a919b04-0087-4835-9834-4e583026e9dd"),
                            UserCountry = "Canada",
                            UserEmail = "jane.smith@example.com",
                            UserIdentityNumber = 54321,
                            UserName = "Jane",
                            UserResidenceCity = "Toronto",
                            UserResidenceHouseNumber = "456",
                            UserResidenceStreet = "Queen Street",
                            UserSurName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("30264caf-92f7-4c9c-8920-be05c6d5537f"),
                            UserCountry = "Australia",
                            UserEmail = "alice.johnson@example.com",
                            UserIdentityNumber = 98765,
                            UserName = "Alice",
                            UserResidenceCity = "Sydney",
                            UserResidenceHouseNumber = "789",
                            UserResidenceStreet = "George Street",
                            UserSurName = "Johnson"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
